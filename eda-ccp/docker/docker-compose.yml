version: '2.1'
services:
  kafka:
    hostname: kafka
    container_name: kafka
    image: quay.io/strimzi/kafka:0.35.1-kafka-3.4.0
    command: [
      "sh", "-c",
      "./bin/kafka-storage.sh format -t X6GgnrKiQJmebuL2rWU9dw -c ./config/kraft/server.properties && bin/kafka-server-start.sh ./config/kraft/server.properties --override advertised.listeners=$${KAFKA_ADVERTISED_LISTENERS} --override num.partitions=$${KAFKA_NUM_PARTITIONS} --override group.min.session.timeout.ms=$${KAFKA_GROUP_MIN_SESSION_TIMEOUT_MS}"
    ]
    ports:
      - 9092:9092
    environment:
      LOG_DIR: "/tmp/logs"
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:9092
      KAFKA_NUM_PARTITIONS: 1
      KAFKA_GROUP_MIN_SESSION_TIMEOUT_MS: 100
    networks:
      - demo-network
  minio:
    hostname: minio
    container_name: minio
    image: minio/minio:RELEASE.2023-01-31T02-24-19Z
    ports:
      - 9000:9000
      - 9001:9001
    volumes:
      - ./data/minio:/data
    command: server /data --console-address ":9001"
    environment:
      - MINIO_ROOT_USER=admin
      - MINIO_ROOT_PASSWORD=minio12345
    networks:
      - demo-network
  minio-bucket-init:
    container_name: minio-bucket-init
    image: quay.io/rhdevelopers/minio-mc-custom:v23.02
    depends_on:
      - minio
    environment:
      - MINIO_CFG_DIR=/home/.mc/config
      - MINIO_ALIAS=myminio
      - MINIO_BUCKET=eda-ccp-s3
      - MINIO_ROOT_USER=admin
      - MINIO_ROOT_PASSWORD=minio12345
      - ACCESS_KEY=l0w8nBo4n61eTqe1
      - SECRET_KEY=v72uuD5yu0l3LtfWuxpqyoWZBOXOGOdN
    entrypoint: >
      /bin/sh -c "
      sleep 5;
      /usr/bin/mc --config-dir $${MINIO_CFG_DIR} alias set $${MINIO_ALIAS} http://minio:9000 $${MINIO_ROOT_USER} $${MINIO_ROOT_PASSWORD};
      /usr/bin/mc --config-dir $${MINIO_CFG_DIR} mb $${MINIO_ALIAS}/$${MINIO_BUCKET};
      /usr/bin/mc --config-dir $${MINIO_CFG_DIR} anonymous set public $${MINIO_ALIAS}/$${MINIO_BUCKET};
      /usr/bin/mc --config-dir $${MINIO_CFG_DIR} admin user svcacct add --access-key $${ACCESS_KEY} --secret-key $${SECRET_KEY} $${MINIO_ALIAS} $${MINIO_ROOT_USER};
      "
    networks:
      - demo-network
  eda-ccp-producer:
    hostname: eda-ccp-producer
    container_name: eda-ccp-producer
    image: quay.io/rhdevelopers/eda-claim-check-pattern-with-demo-data:v23.02
    depends_on:
      - kafka
      - minio
    environment:
      - APP_PATH_TO_IMAGES=/home/data/images
      - APP_NUM_RECORDS=250
    command: producer
    networks:
      - demo-network
  eda-ccp-consumer:
    hostname: eda-ccp-consumer
    container_name: eda-ccp-consumer
    image: quay.io/rhdevelopers/eda-claim-check-pattern:v23.02
    depends_on:
      - kafka
      - minio
      - eda-ccp-producer
    command: consumer
    networks:
      - demo-network
  console-consumer:
    hostname: console-consumer
    container_name: console-consumer
    image: quay.io/strimzi/kafka:0.33.0-kafka-3.3.2
    command: [
      "sh", "-c",
      "bin/kafka-console-consumer.sh --bootstrap-server kafka:9092 --topic my_image_stream_topic --from-beginning --property print.key=true --property key.separator=' -> '"
    ]
    depends_on:
      - kafka
      - eda-ccp-producer
    networks:
      - demo-network
networks:
  demo-network:
    name: eda-ccp-demo
