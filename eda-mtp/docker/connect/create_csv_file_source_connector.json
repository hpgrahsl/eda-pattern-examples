{
    "name": "csv-source-001",
    "config": {
        "connector.class":"io.streamthoughts.kafka.connect.filepulse.source.FilePulseSourceConnector",
        "key.converter": "org.apache.kafka.connect.json.JsonConverter",
        "key.converter.schemas.enable":false,
        "value.converter": "org.apache.kafka.connect.json.JsonConverter",
        "value.converter.schemas.enable":false,
        "fs.listing.class": "io.streamthoughts.kafka.connect.filepulse.fs.LocalFSDirectoryListing",
        "fs.listing.directory.path":"/home/files/",
        "fs.listing.recursive.enabled":false,
        "fs.listing.filters":"io.streamthoughts.kafka.connect.filepulse.fs.filter.RegexFileListFilter",
        "fs.listing.interval.ms":"1000",
        "fs.cleanup.policy.class": "io.streamthoughts.kafka.connect.filepulse.fs.clean.LogCleanupPolicy",
        "file.filter.regex.pattern":".*\\.csv$",
        "tasks.reader.class": "io.streamthoughts.kafka.connect.filepulse.fs.reader.LocalRowFileInputReader",
        "tasks.file.status.storage.bootstrap.servers": "kafka:9092",
        "offset.strategy":"name",
        "skip.headers": "1",
        "topic":"pos-transactions",
        "internal.kafka.reporter.bootstrap.servers": "kafka:9092",
        "internal.kafka.reporter.topic":"connect-file-pulse-status",
        "tasks.max": 1,
        "filters":"parse,castAmount,castArtNum,castTranID,castOperatorID,castTNcard,castTNcash",
        "filters.parse.extractColumnName": "headers",
        "filters.parse.trimColumn": "true",
        "filters.parse.separator": ",",
        "filters.parse.type": "io.streamthoughts.kafka.connect.filepulse.filter.DelimitedRowFilter",
        "filters.castAmount.type": "io.streamthoughts.kafka.connect.filepulse.filter.AppendFilter",
        "filters.castAmount.field": "$value.Amount",
        "filters.castAmount.value": "{{ converts($value.Amount, 'DOUBLE') }}",
        "filters.castAmount.overwrite": "true",
        "filters.castArtNum.type": "io.streamthoughts.kafka.connect.filepulse.filter.AppendFilter",
        "filters.castArtNum.field": "$value.ArtNum",
        "filters.castArtNum.value": "{{ converts($value.ArtNum, 'INTEGER') }}",
        "filters.castArtNum.overwrite": "true",
        "filters.castTranID.type": "io.streamthoughts.kafka.connect.filepulse.filter.AppendFilter",
        "filters.castTranID.field": "$value.TranID",
        "filters.castTranID.value": "{{ converts($value.TranID, 'LONG') }}",
        "filters.castTranID.overwrite": "true",
        "filters.castOperatorID.type": "io.streamthoughts.kafka.connect.filepulse.filter.AppendFilter",
        "filters.castOperatorID.field": "$value.OperatorID",
        "filters.castOperatorID.value": "{{ converts($value.OperatorID, 'INTEGER') }}",
        "filters.castOperatorID.overwrite": "true",
        "filters.castTNcard.type": "io.streamthoughts.kafka.connect.filepulse.filter.AppendFilter",
        "filters.castTNcard.field": "$value.TNcard",
        "filters.castTNcard.value": "{{ converts($value.TNcard, 'BOOLEAN') }}",
        "filters.castTNcard.overwrite": "true",
        "filters.castTNcash.type": "io.streamthoughts.kafka.connect.filepulse.filter.AppendFilter",
        "filters.castTNcash.field": "$value.TNcash",
        "filters.castTNcash.value": "{{ converts($value.TNcash, 'BOOLEAN') }}",
        "filters.castTNcash.overwrite": "true",
        "transforms": "dropFields,renameFields",
        "transforms.dropFields.type": "org.apache.kafka.connect.transforms.ReplaceField$Value",
        "transforms.dropFields.exclude": "BeginDateTime,BreakTime,TranTime,WorkstationGroupID",
        "transforms.renameFields.type": "org.apache.kafka.connect.transforms.ReplaceField$Value",
        "transforms.renameFields.renames": "Amount:total-amount,ArtNum:items-count,EndDateTime:datetime,OperatorID:operator-id,TNcard:with-card,TNcash:with-cash,TranID:id"
    }
}