version: '2.1'
services:
  zookeeper:
    hostname: zookeeper
    container_name: zookeeper
    image: quay.io/strimzi/kafka:0.33.0-kafka-3.3.2
    command: [
      "sh", "-c",
      "bin/zookeeper-server-start.sh config/zookeeper.properties"
    ]
    ports:
      - 2181:2181
    environment:
      LOG_DIR: /tmp/logs
    networks:
      - demo-network
  kafka:
    hostname: kafka
    container_name: kafka
    image: quay.io/strimzi/kafka:0.33.0-kafka-3.3.2
    command: [
      "sh", "-c",
      "bin/kafka-server-start.sh config/server.properties --override listeners=$${KAFKA_LISTENERS} --override advertised.listeners=$${KAFKA_ADVERTISED_LISTENERS} --override zookeeper.connect=$${KAFKA_ZOOKEEPER_CONNECT} --override num.partitions=$${KAFKA_NUM_PARTITIONS} --override group.min.session.timeout.ms=$${KAFKA_GROUP_MIN_SESSION_TIMEOUT_MS}"
    ]
    depends_on:
      - zookeeper
    ports:
      - 9092:9092
    environment:
      LOG_DIR: "/tmp/logs"
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:9092
      KAFKA_LISTENERS: PLAINTEXT://0.0.0.0:9092
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_NUM_PARTITIONS: 1
      KAFKA_GROUP_MIN_SESSION_TIMEOUT_MS: 100
    networks:
      - demo-network
  connect:
    hostname: connect
    container_name: connect
    image: quay.io/strimzi/kafka:0.33.0-kafka-3.3.2
    command: [
      "sh", "-c",
      "bin/connect-distributed.sh config/connect-distributed.properties"
    ]
    volumes:
      - ./connect/config/connect-distributed.properties:/opt/kafka/config/connect-distributed.properties
      - ./connect/plugins/streamthoughts-kafka-connect-file-pulse-2.8.0:/opt/connectors/streamthoughts-kafka-connect-file-pulse-2.8.0
      - ./connect/plugins/http-connector-for-apache-kafka-0.6.0:/opt/connectors/http-connector-for-apache-kafka-0.6.0
      - ./connect/files:/home/files
    depends_on:
      - kafka
    ports:
      - 8083:8083
    networks:
      - demo-network
  connectors:
    hostname: connectors
    container_name: connectors
    image: debezium/tooling:latest
    command: [
      "sh", "-c",
      "/home/register_connectors.sh"
    ]
    volumes:
      - ./connect/register_connectors.sh:/home/register_connectors.sh
      - ./connect/create_csv_file_source_connector.json:/home/create_csv_file_source_connector.json
      - ./connect/create_http_sink_batched_connector.json:/home/create_http_sink_batched_connector.json
    depends_on:
      - connect
      - eda-mtp-consumer
    networks:
      - demo-network
  eda-mtp-consumer:
    hostname: eda-mtp-consumer
    container_name: eda-mtp-consumer
    image: quay.io/rhdevelopers/eda-mtp-consumer-app:v23.02
    ports:
      - 8080:8080
    networks:
      - demo-network
networks:
  demo-network:
    name: eda-pattern-demos
